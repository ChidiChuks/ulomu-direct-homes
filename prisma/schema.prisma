// Add these models to your schema.prisma

model Property {
  id          String    @id @default(uuid())
  name        String
  address     String
  units       Unit[]
  landlordId  String
  landlord    User      @relation(fields: [landlordId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Unit {
  id          String    @id @default(uuid())
  unitNumber  String
  propertyId  String
  property    Property  @relation(fields: [propertyId], references: [id])
  tenantId    String?
  tenant      User?     @relation("TenantUnit", fields: [tenantId], references: [id])
  rentAmount  Decimal
  leaseStart  DateTime?
  leaseEnd    DateTime?
  status      String    // VACANT, OCCUPIED, MAINTENANCE
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  invoices    Invoice[]
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String
  phone         String
  properties  Property[]
  rentedUnit  Unit[]     @relation("TenantUnit")
  escrowAccount   EscrowAccount?
  savingsGoals SavingsGoal[]
  invoices    Invoice[]
}

model Invoice {
  id            String    @id @default(uuid())
  invoiceNumber String    @unique
  unitId        String
  unit          Unit      @relation(fields: [unitId], references: [id])
  tenantId      String
  tenant        User      @relation(fields: [tenantId], references: [id])
  amount        Decimal
  dueDate       DateTime
  status        String    // PENDING, PAID, OVERDUE
  items         InvoiceItem[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model InvoiceItem {
  id          String    @id @default(uuid())
  invoiceId   String
  invoice     Invoice   @relation(fields: [invoiceId], references: [id])
  description String
  amount      Decimal
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}